% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cv_structuredSCA.R
\name{cv_structuredSCA}
\alias{cv_structuredSCA}
\title{A K-fold cross-validation procedure when common/distictive processes are
known.}
\usage{
cv_structuredSCA(DATA, Jk, R, Position, component_structure, MaxIter, NRSTARTS,
  LassoSequence, nfolds)
}
\arguments{
\item{DATA}{The concatenated data block, with rows represending subjects.}

\item{Jk}{A vector. Each element of this vector is the number of columns of a
data block.}

\item{R}{The number of components.}

\item{Position}{A scaler or a vector indicating the column(s) of which the variables will be selected by LASSO in the component loading matrix (P).}

\item{component_structure}{A matrix specifing which elements in the component
matrix should be fixed at zeros. see \code{component_structure}.}

\item{MaxIter}{Maximum number of iterations for this algorithm. The default
value is 400.}

\item{NRSTARTS}{The number of multistarts for this algorithm. The default
value is 1.}

\item{LassoSequence}{The range of lasso tuning parameters. The default value
is a sequence of 50 numbers from 0.00000001 to the smallest Lasso tuning parameter
that can make the entire common component(s) to be zeros. Note that by default the 50 numbers are equally spaced on the log scale.}

\item{nfolds}{Number of folds. If missing, then 10 fold cross-validation will
be performed.}
}
\value{
\item{PRESS}{A vector of predicted residual sum of squares (PRESS) for the sequence of Lasso tuning parameters.}
\item{LassoSeqence}{The sequence of Lasso tuning parameters used in cross-validation.}
\item{plot}{A plot of mean square errors +/- 1 standard error against Lasso tuning parameters. The plot is plotted agains a log scale of lumbda if \code{LassoSequence} is not defined by users. }
\item{LassoRegion}{A region where the suitable lambda can be found, according to the "1 SE rule". }
}
\description{
\code{cv_structuredSCA} helps to find a range of lasso tuning parameters for the
common component so as to generate sparse common component.
}
\details{
This function search through a range of lasso tuning parameters for the common
component, while keeping distinctive components fixed (- that is, the zeros in
the distinctive components are fixed). This function may be of help if user
wants to obtain some sparsness in the common component.
}
\examples{
\dontrun{
DATA1 <- matrix(rnorm(50), nrow=5)
DATA2 <- matrix(rnorm(100), nrow=5) #thus, we assume that DATA1 and DATA2 are with respect to the same 5 subjects here.
DATA <- cbind(DATA1, DATA2)
Jk <- c(10, 20) #DATA1 has 10 columns, DATA2 20.
R <- 4 # assume we want to have 4 components in P matrix.
Position <- 1 # assume that we let the variables in the first column to be selected by LASSO in concatenated P matrix.
com_str <- component_structure(Jk, R, target) # we can either use the function component_structure() or to specify by ourselves
                                                    # here we use the component_structure() function.
cv_structuredSCA(DATA, Jk, R, Position, component_structure=com_str, MaxIter = 100, NRSTARTS = 40, LassoSequence = seq(from= 0.002, to=0.1, length.out = 10))
# note that since we do now specify nfolds in cv_CDpreKf(), nfolds is set to be 10.
}
}
\references{
Witten, D.M., Tibshirani, R., & Hastie, T. (2009), A penalized matrix decomposition, with applications to sparse principal components and canonical correlation analysis. \emph{Biostatistics}, \emph{10}(3), 515-534.

Gu, Z., & Van Deun, K. (2016). A variable selection method for simultaneous component based data integration. \emph{Chemometrics and Intelligent Laboratory Systems}, \emph{158}, 187-199.
}
